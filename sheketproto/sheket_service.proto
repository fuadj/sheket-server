syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.mukera.sheket.client.network";
option java_outer_classname = "SheketServiceProto";

package sheketproto;

service SheketService {
    rpc UserSignup (SingupRequest) returns (SignupResponse);

    rpc SyncCompanies (SyncCompanyRequest) returns (CompanyList);
    rpc EditUserName (EditUserNameRequest) returns (EmptyResponse);

    rpc CreateCompany (NewCompanyRequest) returns (Company);
    rpc AddEmployee (AddEmployeeRequest) returns (AddEmployeeResponse);
    rpc SyncEntity (EntityRequest) returns (EmptyResponse);
    rpc SyncTransaction (TransactionRequest) returns (TransactionResponse);
    rpc IssuePayment (IssuePaymentRequest) returns (IssuePaymentResponse);
    rpc VerifyPayment (VerifyPaymentRequest) returns (VerifyPaymentResponse);
}

/**
 * Common Messages
 */
message EmptyRequest {
}
message EmptyResponse {
}

// Requests that require the user to be authenticated need to embed this.
message SheketAuth {
    string login_cookie = 1;
}

message CompanyID {
    int64 company_id = 1;
}

message CompanyAuth {
    SheketAuth sheketAuth = 1;
    CompanyID company_id = 2;
}
/**
 * END - Common Message
 */

message SingupRequest {
    string token = 1;
}

message SignupResponse {
    string username = 1;
    int64 user_id = 2;
    string login_cookie = 3;
}

message SyncCompanyRequest {
    SheketAuth auth = 1;
    int64 user_rev = 2;
    string device_id = 3;
    string local_user_time = 4;
}

message SyncUserResponse {
}

message NewCompanyRequest {
    SheketAuth auth = 1;
    string name = 2;
    string device_id = 3;
}

message Company {
    int64 company_id = 1;
    string company_name = 2;
    string permission = 3;
    string signed_license = 4;
}

message CompanyList {
    repeated Company companies = 1;
}

message EditUserNameRequest {
    SheketAuth auth = 1;
    string new_name = 2;
}

message AddEmployeeRequest {
    CompanyAuth companyAuth = 1;
    int64 employee_id = 2;
    string permission = 3;
}

message AddEmployeeResponse {
    int64 employee_id = 1;
    string employee_name = 2;
}

message IssuePaymentRequest {
}

message IssuePaymentResponse {
}

message VerifyPaymentRequest {
}

message VerifyPaymentResponse {
}

message Item {
    sint64 item_id = 1;

    string name = 2;
    string code = 3;

    string UUID = 4;
    int64 status_flag = 5;

    sint64 category_id = 6;

    int64 unit_of_measurement = 7;
    bool has_derived_unit = 8;
    string derived_name = 9;
    double derived_factor = 10;
}

message Category {
    sint64 category_id = 1;

    string name = 2;
    sint64 parent_id = 3;

    string UUID = 4;
    int64 status_flag = 5;
}

message Branch {
    sint64 branch_id = 1;

    string name = 2;

    string UUID = 3;
    int64 status_flag = 4;
}

message Employee {
    int64 employee_id = 1;

    string name = 2;
    string permission = 3;
}

message BranchItem {
    sint64 branch_id = 1;
    sint64 item_id = 2;

    double quantity = 3;
    string shelf_location = 4;
}

message BranchCategory {
    sint64 branch_id = 1;
    sint64 category_id = 2;
}

message EntityRequest {
    enum Action {
        CREATE = 0;
        UPDATE = 1;
        DELETE = 2;
    }

    message RequestItem {
        Item item = 1;
        Action action = 2;
    }

    message RequestCategory {
        Category category = 1;
        Action action = 2;
    }

    message RequestBranch {
        Branch branch = 1;
        Action action = 2;
    }

    message RequestEmployee {
        Action action = 1;
        Employee employee = 2;
    }

    message RequestBranchItem {
        Action action = 1;
        BranchItem branchItem = 2;
    }

    message RequestBranchCategory {
        Action action = 1;
        BranchCategory branchCategory = 2;
    }

    CompanyAuth companyAuth = 1;

    repeated RequestItem items = 2;
    repeated RequestCategory categories = 3;
    repeated RequestBranch branches = 4;
    repeated RequestEmployee employees = 5;
    repeated RequestBranchItem branchItems = 6;
    repeated RequestBranchCategory branchCategories = 7;

    int64 old_category_rev = 8;
    int64 old_item_rev = 9;
    int64 old_branch_rev = 10;
    int64 old_branch_item_rev = 11;
    int64 old_member_rev = 12;
    int64 old_branch_category_rev = 13;
}

message EntityResponse {
    enum SyncState {
        // EXIST is the default state. If you deleted it, set it to REMOVED.
        EXIST = 0;
        REMOVED = 1;
    }

    message SyncItem {
        Item item = 1;
        SyncState state = 2;
    }

    message SyncCategory {
        Category category = 1;
        SyncState state = 2;
    }

    message SyncBranch {
        Branch branch = 1;
        SyncState state = 2;
    }

    message SyncEmployee {
        Employee employee = 1;
        SyncState state = 2;
    }

    message SyncBranchItem {
        BranchItem branchItem = 1;
        SyncState state = 2;
    }

    message SyncBranchCategory {
        BranchCategory branchCategory = 1;
        SyncState state = 2;
    }

    message UpdatedId {
        // old_id is signed because it can be -ve
        sint64 old_id = 1;
        // new_id can't be -ve, so it is not signed
        int64 new_id = 2;
    }

    CompanyID company_id = 1;

    repeated UpdatedId updated_item_ids = 2;
    repeated UpdatedId updated_branch_ids = 3;
    repeated UpdatedId updated_category_ids = 4;

    repeated SyncItem items = 5;
    repeated SyncCategory categories = 6;
    repeated SyncBranch branches = 7;
    repeated SyncEmployee employees = 8;
    repeated SyncBranchItem branchItems = 9;
    repeated SyncBranchCategory branchCategories = 10;

    int64 new_category_rev = 11;
    int64 new_item_rev = 12;
    int64 new_branch_rev = 13;
    int64 new_branch_item_rev = 14;
    int64 new_member_rev = 15;
    int64 new_branch_category_rev = 16;
}

message TransactionRequest {
}
message TransactionResponse {
}
