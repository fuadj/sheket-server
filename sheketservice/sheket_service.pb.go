// Code generated by protoc-gen-go.
// source: sheket_service.proto
// DO NOT EDIT!

/*
Package sheketproto is a generated protocol buffer package.

It is generated from these files:
	sheket_service.proto

It has these top-level messages:
	EmptyRequest
	EmptyResponse
	SheketAuth
	CompanyID
	CompanyAuth
	SingupRequest
	SignupResponse
	SyncUserRequest
	SyncUserResponse
	NewCompanyRequest
	Company
	CompanyList
	EditUserNameRequest
	AddEmployeeRequest
	AddEmployeeResponse
	IssuePaymentRequest
	IssuePaymentResponse
	VerifyPaymentRequest
	VerifyPaymentResponse
	Item
	Category
	Branch
	Employee
	BranchItem
	BranchCategory
	EntityRequest
	EntityResponse
	TransactionRequest
	TransactionResponse
*/
package sheketproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EntityRequest_Action int32

const (
	EntityRequest_CREATE EntityRequest_Action = 0
	EntityRequest_UPDATE EntityRequest_Action = 1
	EntityRequest_DELETE EntityRequest_Action = 2
)

var EntityRequest_Action_name = map[int32]string{
	0: "CREATE",
	1: "UPDATE",
	2: "DELETE",
}
var EntityRequest_Action_value = map[string]int32{
	"CREATE": 0,
	"UPDATE": 1,
	"DELETE": 2,
}

func (x EntityRequest_Action) String() string {
	return proto.EnumName(EntityRequest_Action_name, int32(x))
}
func (EntityRequest_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{25, 0} }

type EntityResponse_SyncState int32

const (
	// EXIST is the default state. If you deleted it, set it to REMOVED.
	EntityResponse_EXIST   EntityResponse_SyncState = 0
	EntityResponse_REMOVED EntityResponse_SyncState = 1
)

var EntityResponse_SyncState_name = map[int32]string{
	0: "EXIST",
	1: "REMOVED",
}
var EntityResponse_SyncState_value = map[string]int32{
	"EXIST":   0,
	"REMOVED": 1,
}

func (x EntityResponse_SyncState) String() string {
	return proto.EnumName(EntityResponse_SyncState_name, int32(x))
}
func (EntityResponse_SyncState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 0} }

// *
// Common Messages
type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()                    { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string            { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()               {}
func (*EmptyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Requests that require the user to be authenticated need to embed this.
type SheketAuth struct {
	LoginCookie string `protobuf:"bytes,1,opt,name=login_cookie,json=loginCookie" json:"login_cookie,omitempty"`
}

func (m *SheketAuth) Reset()                    { *m = SheketAuth{} }
func (m *SheketAuth) String() string            { return proto.CompactTextString(m) }
func (*SheketAuth) ProtoMessage()               {}
func (*SheketAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CompanyID struct {
	CompanyId int64 `protobuf:"varint,1,opt,name=company_id,json=companyId" json:"company_id,omitempty"`
}

func (m *CompanyID) Reset()                    { *m = CompanyID{} }
func (m *CompanyID) String() string            { return proto.CompactTextString(m) }
func (*CompanyID) ProtoMessage()               {}
func (*CompanyID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type CompanyAuth struct {
	SheketAuth *SheketAuth `protobuf:"bytes,1,opt,name=sheketAuth" json:"sheketAuth,omitempty"`
	CompanyId  *CompanyID  `protobuf:"bytes,2,opt,name=company_id,json=companyId" json:"company_id,omitempty"`
}

func (m *CompanyAuth) Reset()                    { *m = CompanyAuth{} }
func (m *CompanyAuth) String() string            { return proto.CompactTextString(m) }
func (*CompanyAuth) ProtoMessage()               {}
func (*CompanyAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CompanyAuth) GetSheketAuth() *SheketAuth {
	if m != nil {
		return m.SheketAuth
	}
	return nil
}

func (m *CompanyAuth) GetCompanyId() *CompanyID {
	if m != nil {
		return m.CompanyId
	}
	return nil
}

type SingupRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *SingupRequest) Reset()                    { *m = SingupRequest{} }
func (m *SingupRequest) String() string            { return proto.CompactTextString(m) }
func (*SingupRequest) ProtoMessage()               {}
func (*SingupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type SignupResponse struct {
	Username    string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	UserId      int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	LoginCookie string `protobuf:"bytes,3,opt,name=login_cookie,json=loginCookie" json:"login_cookie,omitempty"`
}

func (m *SignupResponse) Reset()                    { *m = SignupResponse{} }
func (m *SignupResponse) String() string            { return proto.CompactTextString(m) }
func (*SignupResponse) ProtoMessage()               {}
func (*SignupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type SyncUserRequest struct {
	Auth          *SheketAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	UserRev       int64       `protobuf:"varint,2,opt,name=user_rev,json=userRev" json:"user_rev,omitempty"`
	DeviceId      string      `protobuf:"bytes,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	LocalUserTime string      `protobuf:"bytes,4,opt,name=local_user_time,json=localUserTime" json:"local_user_time,omitempty"`
}

func (m *SyncUserRequest) Reset()                    { *m = SyncUserRequest{} }
func (m *SyncUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SyncUserRequest) ProtoMessage()               {}
func (*SyncUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SyncUserRequest) GetAuth() *SheketAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type SyncUserResponse struct {
}

func (m *SyncUserResponse) Reset()                    { *m = SyncUserResponse{} }
func (m *SyncUserResponse) String() string            { return proto.CompactTextString(m) }
func (*SyncUserResponse) ProtoMessage()               {}
func (*SyncUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type NewCompanyRequest struct {
	Auth     *SheketAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	Name     string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	DeviceId string      `protobuf:"bytes,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *NewCompanyRequest) Reset()                    { *m = NewCompanyRequest{} }
func (m *NewCompanyRequest) String() string            { return proto.CompactTextString(m) }
func (*NewCompanyRequest) ProtoMessage()               {}
func (*NewCompanyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *NewCompanyRequest) GetAuth() *SheketAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type Company struct {
	CompanyId     int64  `protobuf:"varint,1,opt,name=company_id,json=companyId" json:"company_id,omitempty"`
	CompanyName   string `protobuf:"bytes,2,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	Permission    string `protobuf:"bytes,3,opt,name=permission" json:"permission,omitempty"`
	SignedLicense string `protobuf:"bytes,4,opt,name=signed_license,json=signedLicense" json:"signed_license,omitempty"`
}

func (m *Company) Reset()                    { *m = Company{} }
func (m *Company) String() string            { return proto.CompactTextString(m) }
func (*Company) ProtoMessage()               {}
func (*Company) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type CompanyList struct {
	Companies []*Company `protobuf:"bytes,1,rep,name=companies" json:"companies,omitempty"`
}

func (m *CompanyList) Reset()                    { *m = CompanyList{} }
func (m *CompanyList) String() string            { return proto.CompactTextString(m) }
func (*CompanyList) ProtoMessage()               {}
func (*CompanyList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CompanyList) GetCompanies() []*Company {
	if m != nil {
		return m.Companies
	}
	return nil
}

type EditUserNameRequest struct {
	Auth    *SheketAuth `protobuf:"bytes,1,opt,name=auth" json:"auth,omitempty"`
	NewName string      `protobuf:"bytes,2,opt,name=new_name,json=newName" json:"new_name,omitempty"`
}

func (m *EditUserNameRequest) Reset()                    { *m = EditUserNameRequest{} }
func (m *EditUserNameRequest) String() string            { return proto.CompactTextString(m) }
func (*EditUserNameRequest) ProtoMessage()               {}
func (*EditUserNameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *EditUserNameRequest) GetAuth() *SheketAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type AddEmployeeRequest struct {
	CompanyAuth *CompanyAuth `protobuf:"bytes,1,opt,name=companyAuth" json:"companyAuth,omitempty"`
	EmployeeId  int64        `protobuf:"varint,2,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	Permission  string       `protobuf:"bytes,3,opt,name=permission" json:"permission,omitempty"`
}

func (m *AddEmployeeRequest) Reset()                    { *m = AddEmployeeRequest{} }
func (m *AddEmployeeRequest) String() string            { return proto.CompactTextString(m) }
func (*AddEmployeeRequest) ProtoMessage()               {}
func (*AddEmployeeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AddEmployeeRequest) GetCompanyAuth() *CompanyAuth {
	if m != nil {
		return m.CompanyAuth
	}
	return nil
}

type AddEmployeeResponse struct {
	EmployeeId   int64  `protobuf:"varint,1,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	EmployeeName string `protobuf:"bytes,2,opt,name=employee_name,json=employeeName" json:"employee_name,omitempty"`
}

func (m *AddEmployeeResponse) Reset()                    { *m = AddEmployeeResponse{} }
func (m *AddEmployeeResponse) String() string            { return proto.CompactTextString(m) }
func (*AddEmployeeResponse) ProtoMessage()               {}
func (*AddEmployeeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type IssuePaymentRequest struct {
}

func (m *IssuePaymentRequest) Reset()                    { *m = IssuePaymentRequest{} }
func (m *IssuePaymentRequest) String() string            { return proto.CompactTextString(m) }
func (*IssuePaymentRequest) ProtoMessage()               {}
func (*IssuePaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type IssuePaymentResponse struct {
}

func (m *IssuePaymentResponse) Reset()                    { *m = IssuePaymentResponse{} }
func (m *IssuePaymentResponse) String() string            { return proto.CompactTextString(m) }
func (*IssuePaymentResponse) ProtoMessage()               {}
func (*IssuePaymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type VerifyPaymentRequest struct {
}

func (m *VerifyPaymentRequest) Reset()                    { *m = VerifyPaymentRequest{} }
func (m *VerifyPaymentRequest) String() string            { return proto.CompactTextString(m) }
func (*VerifyPaymentRequest) ProtoMessage()               {}
func (*VerifyPaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type VerifyPaymentResponse struct {
}

func (m *VerifyPaymentResponse) Reset()                    { *m = VerifyPaymentResponse{} }
func (m *VerifyPaymentResponse) String() string            { return proto.CompactTextString(m) }
func (*VerifyPaymentResponse) ProtoMessage()               {}
func (*VerifyPaymentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type Item struct {
	ItemId            int32   `protobuf:"zigzag32,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Name              string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Code              string  `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	UUID              string  `protobuf:"bytes,4,opt,name=UUID,json=uUID" json:"UUID,omitempty"`
	StatusFlag        int32   `protobuf:"varint,5,opt,name=status_flag,json=statusFlag" json:"status_flag,omitempty"`
	CategoryId        int32   `protobuf:"zigzag32,6,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	UnitOfMeasurement int32   `protobuf:"varint,7,opt,name=unit_of_measurement,json=unitOfMeasurement" json:"unit_of_measurement,omitempty"`
	HasDerivedUnit    bool    `protobuf:"varint,8,opt,name=has_derived_unit,json=hasDerivedUnit" json:"has_derived_unit,omitempty"`
	DerivedName       string  `protobuf:"bytes,9,opt,name=derived_name,json=derivedName" json:"derived_name,omitempty"`
	DerivedFactor     float64 `protobuf:"fixed64,10,opt,name=derived_factor,json=derivedFactor" json:"derived_factor,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

type Category struct {
	CategoryId int32  `protobuf:"zigzag32,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ParentId   int32  `protobuf:"zigzag32,3,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	UUID       string `protobuf:"bytes,4,opt,name=UUID,json=uUID" json:"UUID,omitempty"`
	StatusFlag int32  `protobuf:"varint,5,opt,name=status_flag,json=statusFlag" json:"status_flag,omitempty"`
}

func (m *Category) Reset()                    { *m = Category{} }
func (m *Category) String() string            { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()               {}
func (*Category) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type Branch struct {
	BranchId   int32  `protobuf:"zigzag32,1,opt,name=branch_id,json=branchId" json:"branch_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UUID       string `protobuf:"bytes,3,opt,name=UUID,json=uUID" json:"UUID,omitempty"`
	StatusFlag int32  `protobuf:"varint,4,opt,name=status_flag,json=statusFlag" json:"status_flag,omitempty"`
}

func (m *Branch) Reset()                    { *m = Branch{} }
func (m *Branch) String() string            { return proto.CompactTextString(m) }
func (*Branch) ProtoMessage()               {}
func (*Branch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type Employee struct {
	EmployeeId int32  `protobuf:"varint,1,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Permission string `protobuf:"bytes,3,opt,name=permission" json:"permission,omitempty"`
}

func (m *Employee) Reset()                    { *m = Employee{} }
func (m *Employee) String() string            { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()               {}
func (*Employee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type BranchItem struct {
	BranchId      int32   `protobuf:"zigzag32,1,opt,name=branch_id,json=branchId" json:"branch_id,omitempty"`
	ItemId        int32   `protobuf:"zigzag32,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Quantity      float64 `protobuf:"fixed64,3,opt,name=quantity" json:"quantity,omitempty"`
	ShelfLocation string  `protobuf:"bytes,4,opt,name=shelf_location,json=shelfLocation" json:"shelf_location,omitempty"`
}

func (m *BranchItem) Reset()                    { *m = BranchItem{} }
func (m *BranchItem) String() string            { return proto.CompactTextString(m) }
func (*BranchItem) ProtoMessage()               {}
func (*BranchItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type BranchCategory struct {
	BranchId   int32 `protobuf:"zigzag32,1,opt,name=branch_id,json=branchId" json:"branch_id,omitempty"`
	CategoryId int32 `protobuf:"zigzag32,2,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *BranchCategory) Reset()                    { *m = BranchCategory{} }
func (m *BranchCategory) String() string            { return proto.CompactTextString(m) }
func (*BranchCategory) ProtoMessage()               {}
func (*BranchCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type EntityRequest struct {
	CompanyAuth          *CompanyAuth                           `protobuf:"bytes,1,opt,name=companyAuth" json:"companyAuth,omitempty"`
	Items                []*EntityRequest_RequestItem           `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	Categories           []*EntityRequest_RequestCategory       `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Branches             []*EntityRequest_RequestBranch         `protobuf:"bytes,4,rep,name=branches" json:"branches,omitempty"`
	Employees            []*EntityRequest_RequestEmployee       `protobuf:"bytes,5,rep,name=employees" json:"employees,omitempty"`
	BranchItems          []*EntityRequest_RequestBranchItem     `protobuf:"bytes,6,rep,name=branchItems" json:"branchItems,omitempty"`
	BranchCategories     []*EntityRequest_RequestBranchCategory `protobuf:"bytes,7,rep,name=branchCategories" json:"branchCategories,omitempty"`
	OldCategoryRev       int64                                  `protobuf:"varint,8,opt,name=old_category_rev,json=oldCategoryRev" json:"old_category_rev,omitempty"`
	OldItemRev           int64                                  `protobuf:"varint,9,opt,name=old_item_rev,json=oldItemRev" json:"old_item_rev,omitempty"`
	OldBranchRev         int64                                  `protobuf:"varint,10,opt,name=old_branch_rev,json=oldBranchRev" json:"old_branch_rev,omitempty"`
	OldBranchItemRev     int64                                  `protobuf:"varint,11,opt,name=old_branch_item_rev,json=oldBranchItemRev" json:"old_branch_item_rev,omitempty"`
	OldMemberRev         int64                                  `protobuf:"varint,12,opt,name=old_member_rev,json=oldMemberRev" json:"old_member_rev,omitempty"`
	OldBranchCategoryRev int64                                  `protobuf:"varint,13,opt,name=old_branch_category_rev,json=oldBranchCategoryRev" json:"old_branch_category_rev,omitempty"`
}

func (m *EntityRequest) Reset()                    { *m = EntityRequest{} }
func (m *EntityRequest) String() string            { return proto.CompactTextString(m) }
func (*EntityRequest) ProtoMessage()               {}
func (*EntityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *EntityRequest) GetCompanyAuth() *CompanyAuth {
	if m != nil {
		return m.CompanyAuth
	}
	return nil
}

func (m *EntityRequest) GetItems() []*EntityRequest_RequestItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *EntityRequest) GetCategories() []*EntityRequest_RequestCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *EntityRequest) GetBranches() []*EntityRequest_RequestBranch {
	if m != nil {
		return m.Branches
	}
	return nil
}

func (m *EntityRequest) GetEmployees() []*EntityRequest_RequestEmployee {
	if m != nil {
		return m.Employees
	}
	return nil
}

func (m *EntityRequest) GetBranchItems() []*EntityRequest_RequestBranchItem {
	if m != nil {
		return m.BranchItems
	}
	return nil
}

func (m *EntityRequest) GetBranchCategories() []*EntityRequest_RequestBranchCategory {
	if m != nil {
		return m.BranchCategories
	}
	return nil
}

type EntityRequest_RequestItem struct {
	Item   *Item                `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
	Action EntityRequest_Action `protobuf:"varint,2,opt,name=action,enum=sheketproto.EntityRequest_Action" json:"action,omitempty"`
}

func (m *EntityRequest_RequestItem) Reset()                    { *m = EntityRequest_RequestItem{} }
func (m *EntityRequest_RequestItem) String() string            { return proto.CompactTextString(m) }
func (*EntityRequest_RequestItem) ProtoMessage()               {}
func (*EntityRequest_RequestItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25, 0} }

func (m *EntityRequest_RequestItem) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type EntityRequest_RequestCategory struct {
	Category *Category            `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Action   EntityRequest_Action `protobuf:"varint,2,opt,name=action,enum=sheketproto.EntityRequest_Action" json:"action,omitempty"`
}

func (m *EntityRequest_RequestCategory) Reset()         { *m = EntityRequest_RequestCategory{} }
func (m *EntityRequest_RequestCategory) String() string { return proto.CompactTextString(m) }
func (*EntityRequest_RequestCategory) ProtoMessage()    {}
func (*EntityRequest_RequestCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 1}
}

func (m *EntityRequest_RequestCategory) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type EntityRequest_RequestBranch struct {
	Branch *Branch              `protobuf:"bytes,1,opt,name=branch" json:"branch,omitempty"`
	Action EntityRequest_Action `protobuf:"varint,2,opt,name=action,enum=sheketproto.EntityRequest_Action" json:"action,omitempty"`
}

func (m *EntityRequest_RequestBranch) Reset()                    { *m = EntityRequest_RequestBranch{} }
func (m *EntityRequest_RequestBranch) String() string            { return proto.CompactTextString(m) }
func (*EntityRequest_RequestBranch) ProtoMessage()               {}
func (*EntityRequest_RequestBranch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25, 2} }

func (m *EntityRequest_RequestBranch) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type EntityRequest_RequestEmployee struct {
	Action   EntityRequest_Action `protobuf:"varint,1,opt,name=action,enum=sheketproto.EntityRequest_Action" json:"action,omitempty"`
	Employee *Employee            `protobuf:"bytes,2,opt,name=employee" json:"employee,omitempty"`
}

func (m *EntityRequest_RequestEmployee) Reset()         { *m = EntityRequest_RequestEmployee{} }
func (m *EntityRequest_RequestEmployee) String() string { return proto.CompactTextString(m) }
func (*EntityRequest_RequestEmployee) ProtoMessage()    {}
func (*EntityRequest_RequestEmployee) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 3}
}

func (m *EntityRequest_RequestEmployee) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type EntityRequest_RequestBranchItem struct {
	Action     EntityRequest_Action `protobuf:"varint,1,opt,name=action,enum=sheketproto.EntityRequest_Action" json:"action,omitempty"`
	BranchItem *BranchItem          `protobuf:"bytes,2,opt,name=branchItem" json:"branchItem,omitempty"`
}

func (m *EntityRequest_RequestBranchItem) Reset()         { *m = EntityRequest_RequestBranchItem{} }
func (m *EntityRequest_RequestBranchItem) String() string { return proto.CompactTextString(m) }
func (*EntityRequest_RequestBranchItem) ProtoMessage()    {}
func (*EntityRequest_RequestBranchItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 4}
}

func (m *EntityRequest_RequestBranchItem) GetBranchItem() *BranchItem {
	if m != nil {
		return m.BranchItem
	}
	return nil
}

type EntityRequest_RequestBranchCategory struct {
	Action         EntityRequest_Action `protobuf:"varint,1,opt,name=action,enum=sheketproto.EntityRequest_Action" json:"action,omitempty"`
	BranchCategory *BranchCategory      `protobuf:"bytes,2,opt,name=branchCategory" json:"branchCategory,omitempty"`
}

func (m *EntityRequest_RequestBranchCategory) Reset()         { *m = EntityRequest_RequestBranchCategory{} }
func (m *EntityRequest_RequestBranchCategory) String() string { return proto.CompactTextString(m) }
func (*EntityRequest_RequestBranchCategory) ProtoMessage()    {}
func (*EntityRequest_RequestBranchCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 5}
}

func (m *EntityRequest_RequestBranchCategory) GetBranchCategory() *BranchCategory {
	if m != nil {
		return m.BranchCategory
	}
	return nil
}

type EntityResponse struct {
	CompanyId            *CompanyID                           `protobuf:"bytes,1,opt,name=company_id,json=companyId" json:"company_id,omitempty"`
	UpdatedItemIds       []*EntityResponse_UpdatedId          `protobuf:"bytes,2,rep,name=updated_item_ids,json=updatedItemIds" json:"updated_item_ids,omitempty"`
	UpdatedBranchIds     []*EntityResponse_UpdatedId          `protobuf:"bytes,3,rep,name=updated_branch_ids,json=updatedBranchIds" json:"updated_branch_ids,omitempty"`
	UpdatedCategoryIds   []*EntityResponse_UpdatedId          `protobuf:"bytes,4,rep,name=updated_category_ids,json=updatedCategoryIds" json:"updated_category_ids,omitempty"`
	Items                []*EntityResponse_SyncItem           `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	Categories           []*EntityResponse_SyncCategory       `protobuf:"bytes,6,rep,name=categories" json:"categories,omitempty"`
	Branches             []*EntityResponse_SyncBranch         `protobuf:"bytes,7,rep,name=branches" json:"branches,omitempty"`
	Employees            []*EntityResponse_SyncEmployee       `protobuf:"bytes,8,rep,name=employees" json:"employees,omitempty"`
	BranchItems          []*EntityResponse_SyncBranchItem     `protobuf:"bytes,9,rep,name=branchItems" json:"branchItems,omitempty"`
	BranchCategories     []*EntityResponse_SyncBranchCategory `protobuf:"bytes,10,rep,name=branchCategories" json:"branchCategories,omitempty"`
	NewCategoryRev       int64                                `protobuf:"varint,11,opt,name=new_category_rev,json=newCategoryRev" json:"new_category_rev,omitempty"`
	NewItemRev           int64                                `protobuf:"varint,12,opt,name=new_item_rev,json=newItemRev" json:"new_item_rev,omitempty"`
	NewBranchRev         int64                                `protobuf:"varint,13,opt,name=new_branch_rev,json=newBranchRev" json:"new_branch_rev,omitempty"`
	NewBranchItemRev     int64                                `protobuf:"varint,14,opt,name=new_branch_item_rev,json=newBranchItemRev" json:"new_branch_item_rev,omitempty"`
	NewMemberRev         int64                                `protobuf:"varint,15,opt,name=new_member_rev,json=newMemberRev" json:"new_member_rev,omitempty"`
	NewBranchCategoryRev int64                                `protobuf:"varint,16,opt,name=new_branch_category_rev,json=newBranchCategoryRev" json:"new_branch_category_rev,omitempty"`
}

func (m *EntityResponse) Reset()                    { *m = EntityResponse{} }
func (m *EntityResponse) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse) ProtoMessage()               {}
func (*EntityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *EntityResponse) GetCompanyId() *CompanyID {
	if m != nil {
		return m.CompanyId
	}
	return nil
}

func (m *EntityResponse) GetUpdatedItemIds() []*EntityResponse_UpdatedId {
	if m != nil {
		return m.UpdatedItemIds
	}
	return nil
}

func (m *EntityResponse) GetUpdatedBranchIds() []*EntityResponse_UpdatedId {
	if m != nil {
		return m.UpdatedBranchIds
	}
	return nil
}

func (m *EntityResponse) GetUpdatedCategoryIds() []*EntityResponse_UpdatedId {
	if m != nil {
		return m.UpdatedCategoryIds
	}
	return nil
}

func (m *EntityResponse) GetItems() []*EntityResponse_SyncItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *EntityResponse) GetCategories() []*EntityResponse_SyncCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *EntityResponse) GetBranches() []*EntityResponse_SyncBranch {
	if m != nil {
		return m.Branches
	}
	return nil
}

func (m *EntityResponse) GetEmployees() []*EntityResponse_SyncEmployee {
	if m != nil {
		return m.Employees
	}
	return nil
}

func (m *EntityResponse) GetBranchItems() []*EntityResponse_SyncBranchItem {
	if m != nil {
		return m.BranchItems
	}
	return nil
}

func (m *EntityResponse) GetBranchCategories() []*EntityResponse_SyncBranchCategory {
	if m != nil {
		return m.BranchCategories
	}
	return nil
}

type EntityResponse_SyncItem struct {
	Item  *Item                    `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
	State EntityResponse_SyncState `protobuf:"varint,2,opt,name=state,enum=sheketproto.EntityResponse_SyncState" json:"state,omitempty"`
}

func (m *EntityResponse_SyncItem) Reset()                    { *m = EntityResponse_SyncItem{} }
func (m *EntityResponse_SyncItem) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse_SyncItem) ProtoMessage()               {}
func (*EntityResponse_SyncItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 0} }

func (m *EntityResponse_SyncItem) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type EntityResponse_SyncCategory struct {
	Category *Category                `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	State    EntityResponse_SyncState `protobuf:"varint,2,opt,name=state,enum=sheketproto.EntityResponse_SyncState" json:"state,omitempty"`
}

func (m *EntityResponse_SyncCategory) Reset()                    { *m = EntityResponse_SyncCategory{} }
func (m *EntityResponse_SyncCategory) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse_SyncCategory) ProtoMessage()               {}
func (*EntityResponse_SyncCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 1} }

func (m *EntityResponse_SyncCategory) GetCategory() *Category {
	if m != nil {
		return m.Category
	}
	return nil
}

type EntityResponse_SyncBranch struct {
	Branch *Branch                  `protobuf:"bytes,1,opt,name=branch" json:"branch,omitempty"`
	State  EntityResponse_SyncState `protobuf:"varint,2,opt,name=state,enum=sheketproto.EntityResponse_SyncState" json:"state,omitempty"`
}

func (m *EntityResponse_SyncBranch) Reset()                    { *m = EntityResponse_SyncBranch{} }
func (m *EntityResponse_SyncBranch) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse_SyncBranch) ProtoMessage()               {}
func (*EntityResponse_SyncBranch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 2} }

func (m *EntityResponse_SyncBranch) GetBranch() *Branch {
	if m != nil {
		return m.Branch
	}
	return nil
}

type EntityResponse_SyncEmployee struct {
	Employee *Employee                `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
	State    EntityResponse_SyncState `protobuf:"varint,2,opt,name=state,enum=sheketproto.EntityResponse_SyncState" json:"state,omitempty"`
}

func (m *EntityResponse_SyncEmployee) Reset()                    { *m = EntityResponse_SyncEmployee{} }
func (m *EntityResponse_SyncEmployee) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse_SyncEmployee) ProtoMessage()               {}
func (*EntityResponse_SyncEmployee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 3} }

func (m *EntityResponse_SyncEmployee) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type EntityResponse_SyncBranchItem struct {
	BranchItem *BranchItem              `protobuf:"bytes,1,opt,name=branchItem" json:"branchItem,omitempty"`
	State      EntityResponse_SyncState `protobuf:"varint,2,opt,name=state,enum=sheketproto.EntityResponse_SyncState" json:"state,omitempty"`
}

func (m *EntityResponse_SyncBranchItem) Reset()         { *m = EntityResponse_SyncBranchItem{} }
func (m *EntityResponse_SyncBranchItem) String() string { return proto.CompactTextString(m) }
func (*EntityResponse_SyncBranchItem) ProtoMessage()    {}
func (*EntityResponse_SyncBranchItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 4}
}

func (m *EntityResponse_SyncBranchItem) GetBranchItem() *BranchItem {
	if m != nil {
		return m.BranchItem
	}
	return nil
}

type EntityResponse_SyncBranchCategory struct {
	BranchCategory *BranchCategory          `protobuf:"bytes,1,opt,name=branchCategory" json:"branchCategory,omitempty"`
	State          EntityResponse_SyncState `protobuf:"varint,2,opt,name=state,enum=sheketproto.EntityResponse_SyncState" json:"state,omitempty"`
}

func (m *EntityResponse_SyncBranchCategory) Reset()         { *m = EntityResponse_SyncBranchCategory{} }
func (m *EntityResponse_SyncBranchCategory) String() string { return proto.CompactTextString(m) }
func (*EntityResponse_SyncBranchCategory) ProtoMessage()    {}
func (*EntityResponse_SyncBranchCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 5}
}

func (m *EntityResponse_SyncBranchCategory) GetBranchCategory() *BranchCategory {
	if m != nil {
		return m.BranchCategory
	}
	return nil
}

type EntityResponse_UpdatedId struct {
	// old_id is signed because it can be -ve
	OldId int32 `protobuf:"zigzag32,1,opt,name=old_id,json=oldId" json:"old_id,omitempty"`
	// new_id can't be -ve, so it is not signed
	NewId int32 `protobuf:"varint,2,opt,name=new_id,json=newId" json:"new_id,omitempty"`
}

func (m *EntityResponse_UpdatedId) Reset()                    { *m = EntityResponse_UpdatedId{} }
func (m *EntityResponse_UpdatedId) String() string            { return proto.CompactTextString(m) }
func (*EntityResponse_UpdatedId) ProtoMessage()               {}
func (*EntityResponse_UpdatedId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 6} }

type TransactionRequest struct {
}

func (m *TransactionRequest) Reset()                    { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()               {}
func (*TransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type TransactionResponse struct {
}

func (m *TransactionResponse) Reset()                    { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()               {}
func (*TransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "sheketproto.EmptyRequest")
	proto.RegisterType((*EmptyResponse)(nil), "sheketproto.EmptyResponse")
	proto.RegisterType((*SheketAuth)(nil), "sheketproto.SheketAuth")
	proto.RegisterType((*CompanyID)(nil), "sheketproto.CompanyID")
	proto.RegisterType((*CompanyAuth)(nil), "sheketproto.CompanyAuth")
	proto.RegisterType((*SingupRequest)(nil), "sheketproto.SingupRequest")
	proto.RegisterType((*SignupResponse)(nil), "sheketproto.SignupResponse")
	proto.RegisterType((*SyncUserRequest)(nil), "sheketproto.SyncUserRequest")
	proto.RegisterType((*SyncUserResponse)(nil), "sheketproto.SyncUserResponse")
	proto.RegisterType((*NewCompanyRequest)(nil), "sheketproto.NewCompanyRequest")
	proto.RegisterType((*Company)(nil), "sheketproto.Company")
	proto.RegisterType((*CompanyList)(nil), "sheketproto.CompanyList")
	proto.RegisterType((*EditUserNameRequest)(nil), "sheketproto.EditUserNameRequest")
	proto.RegisterType((*AddEmployeeRequest)(nil), "sheketproto.AddEmployeeRequest")
	proto.RegisterType((*AddEmployeeResponse)(nil), "sheketproto.AddEmployeeResponse")
	proto.RegisterType((*IssuePaymentRequest)(nil), "sheketproto.IssuePaymentRequest")
	proto.RegisterType((*IssuePaymentResponse)(nil), "sheketproto.IssuePaymentResponse")
	proto.RegisterType((*VerifyPaymentRequest)(nil), "sheketproto.VerifyPaymentRequest")
	proto.RegisterType((*VerifyPaymentResponse)(nil), "sheketproto.VerifyPaymentResponse")
	proto.RegisterType((*Item)(nil), "sheketproto.Item")
	proto.RegisterType((*Category)(nil), "sheketproto.Category")
	proto.RegisterType((*Branch)(nil), "sheketproto.Branch")
	proto.RegisterType((*Employee)(nil), "sheketproto.Employee")
	proto.RegisterType((*BranchItem)(nil), "sheketproto.BranchItem")
	proto.RegisterType((*BranchCategory)(nil), "sheketproto.BranchCategory")
	proto.RegisterType((*EntityRequest)(nil), "sheketproto.EntityRequest")
	proto.RegisterType((*EntityRequest_RequestItem)(nil), "sheketproto.EntityRequest.RequestItem")
	proto.RegisterType((*EntityRequest_RequestCategory)(nil), "sheketproto.EntityRequest.RequestCategory")
	proto.RegisterType((*EntityRequest_RequestBranch)(nil), "sheketproto.EntityRequest.RequestBranch")
	proto.RegisterType((*EntityRequest_RequestEmployee)(nil), "sheketproto.EntityRequest.RequestEmployee")
	proto.RegisterType((*EntityRequest_RequestBranchItem)(nil), "sheketproto.EntityRequest.RequestBranchItem")
	proto.RegisterType((*EntityRequest_RequestBranchCategory)(nil), "sheketproto.EntityRequest.RequestBranchCategory")
	proto.RegisterType((*EntityResponse)(nil), "sheketproto.EntityResponse")
	proto.RegisterType((*EntityResponse_SyncItem)(nil), "sheketproto.EntityResponse.SyncItem")
	proto.RegisterType((*EntityResponse_SyncCategory)(nil), "sheketproto.EntityResponse.SyncCategory")
	proto.RegisterType((*EntityResponse_SyncBranch)(nil), "sheketproto.EntityResponse.SyncBranch")
	proto.RegisterType((*EntityResponse_SyncEmployee)(nil), "sheketproto.EntityResponse.SyncEmployee")
	proto.RegisterType((*EntityResponse_SyncBranchItem)(nil), "sheketproto.EntityResponse.SyncBranchItem")
	proto.RegisterType((*EntityResponse_SyncBranchCategory)(nil), "sheketproto.EntityResponse.SyncBranchCategory")
	proto.RegisterType((*EntityResponse_UpdatedId)(nil), "sheketproto.EntityResponse.UpdatedId")
	proto.RegisterType((*TransactionRequest)(nil), "sheketproto.TransactionRequest")
	proto.RegisterType((*TransactionResponse)(nil), "sheketproto.TransactionResponse")
	proto.RegisterEnum("sheketproto.EntityRequest_Action", EntityRequest_Action_name, EntityRequest_Action_value)
	proto.RegisterEnum("sheketproto.EntityResponse_SyncState", EntityResponse_SyncState_name, EntityResponse_SyncState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for SheketService service

type SheketServiceClient interface {
	UserSignup(ctx context.Context, in *SingupRequest, opts ...grpc.CallOption) (*SignupResponse, error)
	SyncUser(ctx context.Context, in *SyncUserRequest, opts ...grpc.CallOption) (*CompanyList, error)
	EditUserName(ctx context.Context, in *EditUserNameRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	CreateCompany(ctx context.Context, in *NewCompanyRequest, opts ...grpc.CallOption) (*Company, error)
	AddEmployee(ctx context.Context, in *AddEmployeeRequest, opts ...grpc.CallOption) (*AddEmployeeResponse, error)
	SyncEnity(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	SyncTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	IssuePayment(ctx context.Context, in *IssuePaymentRequest, opts ...grpc.CallOption) (*IssuePaymentResponse, error)
	VerifyPayment(ctx context.Context, in *VerifyPaymentRequest, opts ...grpc.CallOption) (*VerifyPaymentResponse, error)
}

type sheketServiceClient struct {
	cc *grpc.ClientConn
}

func NewSheketServiceClient(cc *grpc.ClientConn) SheketServiceClient {
	return &sheketServiceClient{cc}
}

func (c *sheketServiceClient) UserSignup(ctx context.Context, in *SingupRequest, opts ...grpc.CallOption) (*SignupResponse, error) {
	out := new(SignupResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/UserSignup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) SyncUser(ctx context.Context, in *SyncUserRequest, opts ...grpc.CallOption) (*CompanyList, error) {
	out := new(CompanyList)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/SyncUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) EditUserName(ctx context.Context, in *EditUserNameRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/EditUserName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) CreateCompany(ctx context.Context, in *NewCompanyRequest, opts ...grpc.CallOption) (*Company, error) {
	out := new(Company)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/CreateCompany", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) AddEmployee(ctx context.Context, in *AddEmployeeRequest, opts ...grpc.CallOption) (*AddEmployeeResponse, error) {
	out := new(AddEmployeeResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/AddEmployee", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) SyncEnity(ctx context.Context, in *EntityRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/SyncEnity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) SyncTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/SyncTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) IssuePayment(ctx context.Context, in *IssuePaymentRequest, opts ...grpc.CallOption) (*IssuePaymentResponse, error) {
	out := new(IssuePaymentResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/IssuePayment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sheketServiceClient) VerifyPayment(ctx context.Context, in *VerifyPaymentRequest, opts ...grpc.CallOption) (*VerifyPaymentResponse, error) {
	out := new(VerifyPaymentResponse)
	err := grpc.Invoke(ctx, "/sheketproto.SheketService/VerifyPayment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SheketService service

type SheketServiceServer interface {
	UserSignup(context.Context, *SingupRequest) (*SignupResponse, error)
	SyncUser(context.Context, *SyncUserRequest) (*CompanyList, error)
	EditUserName(context.Context, *EditUserNameRequest) (*EmptyResponse, error)
	CreateCompany(context.Context, *NewCompanyRequest) (*Company, error)
	AddEmployee(context.Context, *AddEmployeeRequest) (*AddEmployeeResponse, error)
	SyncEnity(context.Context, *EntityRequest) (*EmptyResponse, error)
	SyncTransaction(context.Context, *TransactionRequest) (*TransactionResponse, error)
	IssuePayment(context.Context, *IssuePaymentRequest) (*IssuePaymentResponse, error)
	VerifyPayment(context.Context, *VerifyPaymentRequest) (*VerifyPaymentResponse, error)
}

func RegisterSheketServiceServer(s *grpc.Server, srv SheketServiceServer) {
	s.RegisterService(&_SheketService_serviceDesc, srv)
}

func _SheketService_UserSignup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).UserSignup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/UserSignup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).UserSignup(ctx, req.(*SingupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_SyncUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).SyncUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/SyncUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).SyncUser(ctx, req.(*SyncUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_EditUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditUserNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).EditUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/EditUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).EditUserName(ctx, req.(*EditUserNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_CreateCompany_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCompanyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).CreateCompany(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/CreateCompany",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).CreateCompany(ctx, req.(*NewCompanyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_AddEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEmployeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).AddEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/AddEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).AddEmployee(ctx, req.(*AddEmployeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_SyncEnity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).SyncEnity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/SyncEnity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).SyncEnity(ctx, req.(*EntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_SyncTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).SyncTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/SyncTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).SyncTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_IssuePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IssuePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).IssuePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/IssuePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).IssuePayment(ctx, req.(*IssuePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SheketService_VerifyPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SheketServiceServer).VerifyPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sheketproto.SheketService/VerifyPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SheketServiceServer).VerifyPayment(ctx, req.(*VerifyPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SheketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sheketproto.SheketService",
	HandlerType: (*SheketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserSignup",
			Handler:    _SheketService_UserSignup_Handler,
		},
		{
			MethodName: "SyncUser",
			Handler:    _SheketService_SyncUser_Handler,
		},
		{
			MethodName: "EditUserName",
			Handler:    _SheketService_EditUserName_Handler,
		},
		{
			MethodName: "CreateCompany",
			Handler:    _SheketService_CreateCompany_Handler,
		},
		{
			MethodName: "AddEmployee",
			Handler:    _SheketService_AddEmployee_Handler,
		},
		{
			MethodName: "SyncEnity",
			Handler:    _SheketService_SyncEnity_Handler,
		},
		{
			MethodName: "SyncTransaction",
			Handler:    _SheketService_SyncTransaction_Handler,
		},
		{
			MethodName: "IssuePayment",
			Handler:    _SheketService_IssuePayment_Handler,
		},
		{
			MethodName: "VerifyPayment",
			Handler:    _SheketService_VerifyPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("sheket_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1861 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x52, 0x1b, 0xcb,
	0x15, 0xce, 0x80, 0x24, 0xa4, 0xa3, 0x1f, 0x44, 0x03, 0x86, 0x8c, 0x13, 0x1b, 0x8f, 0x8d, 0xcb,
	0xe5, 0x38, 0x4a, 0x42, 0xca, 0x95, 0x38, 0xc9, 0x06, 0x84, 0x5c, 0x56, 0x0a, 0x63, 0x6a, 0x04,
	0x4e, 0x2a, 0x3f, 0xa5, 0x12, 0x52, 0x03, 0x53, 0x48, 0x33, 0xb2, 0x66, 0x04, 0xa5, 0x45, 0x92,
	0x55, 0x92, 0x75, 0xb2, 0x48, 0x76, 0xf7, 0x5d, 0xee, 0xf2, 0xae, 0xee, 0x7b, 0xdc, 0xa7, 0xb8,
	0xfd, 0xaf, 0xee, 0x99, 0x41, 0x08, 0xe3, 0x95, 0x66, 0x8e, 0x4e, 0x7f, 0xe7, 0xeb, 0x33, 0xe7,
	0xf4, 0xd7, 0xdd, 0xb0, 0x16, 0x5e, 0xe0, 0x4b, 0x1c, 0xb5, 0x43, 0x3c, 0xba, 0xf2, 0xba, 0xb8,
	0x36, 0x1c, 0x05, 0x51, 0x80, 0x8a, 0xdc, 0xca, 0x5e, 0x9c, 0x0a, 0x94, 0x1a, 0x83, 0x61, 0x34,
	0x71, 0xf1, 0xa7, 0x31, 0x0e, 0x23, 0x67, 0x19, 0xca, 0xe2, 0x3d, 0x1c, 0x06, 0x7e, 0x88, 0x9d,
	0x9f, 0x01, 0xb4, 0x98, 0xff, 0xee, 0x38, 0xba, 0x40, 0x4f, 0xa0, 0xd4, 0x0f, 0xce, 0x3d, 0xbf,
	0xdd, 0x0d, 0x82, 0x4b, 0x0f, 0x6f, 0x5a, 0x5b, 0xd6, 0x8b, 0x82, 0x5b, 0x64, 0xb6, 0x3a, 0x33,
	0x39, 0x2f, 0xa1, 0x50, 0x0f, 0x06, 0xc3, 0x8e, 0x3f, 0x69, 0xee, 0xa3, 0x1f, 0x03, 0x74, 0xf9,
	0x4b, 0xdb, 0xeb, 0x31, 0xef, 0x45, 0xb7, 0x20, 0x2c, 0xcd, 0x9e, 0xf3, 0x37, 0x28, 0x0a, 0x5f,
	0x86, 0xfe, 0x2b, 0x80, 0x50, 0xc5, 0x62, 0xde, 0xc5, 0x9d, 0x8d, 0x9a, 0x46, 0xb7, 0x36, 0xa5,
	0xe2, 0x6a, 0xae, 0xe8, 0xb5, 0x11, 0x66, 0x81, 0x0d, 0x7c, 0x60, 0x0c, 0x54, 0x94, 0xf4, 0xf0,
	0xdb, 0x50, 0x6e, 0x79, 0xfe, 0xf9, 0x78, 0x28, 0x66, 0x8f, 0xd6, 0x20, 0x1b, 0x05, 0x97, 0xd8,
	0x17, 0xf3, 0xe2, 0x2f, 0xce, 0x05, 0x54, 0x5a, 0xde, 0xb9, 0x4f, 0xdd, 0x78, 0x52, 0x90, 0x0d,
	0xf9, 0x31, 0x49, 0xaa, 0xdf, 0x19, 0xc8, 0x14, 0xa8, 0x77, 0xb4, 0x01, 0x4b, 0xf4, 0x59, 0x12,
	0x59, 0x74, 0x73, 0xf4, 0xb5, 0xd9, 0x4b, 0xe4, 0x6e, 0x31, 0x99, 0xbb, 0xaf, 0x2c, 0x58, 0x6e,
	0x4d, 0xfc, 0xee, 0x09, 0x19, 0x21, 0x39, 0xfd, 0x04, 0x32, 0x9d, 0x39, 0xd2, 0xc1, 0x9c, 0xd0,
	0x0f, 0x39, 0xb1, 0xf6, 0x08, 0x5f, 0x89, 0xe8, 0x8c, 0x8c, 0x8b, 0xaf, 0xd0, 0x43, 0x28, 0xf4,
	0x30, 0x2d, 0x03, 0xca, 0x8c, 0xc7, 0xce, 0x73, 0x03, 0xe1, 0xf6, 0x1c, 0x96, 0xfb, 0x41, 0xb7,
	0xd3, 0x6f, 0xb3, 0xd1, 0x91, 0x47, 0xe6, 0x95, 0x61, 0x2e, 0x65, 0x66, 0xa6, 0x7c, 0x8e, 0x89,
	0xd1, 0x41, 0x50, 0x9d, 0xf2, 0x13, 0x15, 0xf2, 0x09, 0x56, 0x0e, 0xf1, 0xb5, 0x48, 0xf0, 0x67,
	0xb1, 0x46, 0x90, 0x61, 0xa9, 0x5c, 0x60, 0x21, 0xd9, 0xf3, 0x4c, 0xba, 0xce, 0x7f, 0x2d, 0x58,
	0x12, 0x01, 0x6f, 0x29, 0x31, 0x9a, 0x75, 0xf9, 0xb7, 0x16, 0xa3, 0x28, 0x6c, 0x87, 0x34, 0xd4,
	0x23, 0x80, 0x21, 0x1e, 0x0d, 0xbc, 0x30, 0xf4, 0x02, 0x5f, 0xc4, 0xd2, 0x2c, 0x68, 0x1b, 0x2a,
	0x21, 0xf9, 0xfe, 0xb8, 0xd7, 0xee, 0x93, 0xf0, 0x64, 0xca, 0x32, 0x37, 0xdc, 0x7a, 0xc0, 0x8d,
	0xce, 0xae, 0x2a, 0xe6, 0x03, 0x8f, 0x64, 0x60, 0x07, 0x04, 0x0b, 0x0f, 0x87, 0x84, 0xd6, 0x22,
	0x49, 0xc3, 0x5a, 0x5a, 0x49, 0xba, 0x53, 0x37, 0xe7, 0xaf, 0xb0, 0xda, 0xe8, 0x79, 0x11, 0x4d,
	0x2f, 0x65, 0xf6, 0xb9, 0x25, 0xe0, 0xe3, 0x6b, 0x7d, 0xb2, 0x4b, 0xe4, 0x9d, 0xc2, 0x39, 0xff,
	0xb1, 0x00, 0xed, 0xf6, 0x7a, 0xa4, 0xc1, 0xfb, 0xc1, 0x04, 0x2b, 0xf8, 0xdf, 0x80, 0x4c, 0x87,
	0xd6, 0x77, 0x9b, 0x69, 0x5c, 0x59, 0x18, 0xdd, 0x19, 0x3d, 0x86, 0x22, 0x16, 0x70, 0xd3, 0x8a,
	0x07, 0x69, 0x22, 0xf9, 0xbf, 0x25, 0xb9, 0xce, 0x9f, 0x61, 0xd5, 0xa0, 0x24, 0x3a, 0x2c, 0x86,
	0x6b, 0x25, 0x70, 0x9f, 0x42, 0x59, 0x39, 0x68, 0x73, 0x2d, 0x49, 0x23, 0x9b, 0xf0, 0x3a, 0xac,
	0x36, 0xc3, 0x70, 0x8c, 0x8f, 0x3a, 0x93, 0x01, 0xf6, 0x23, 0xb9, 0xc8, 0x3d, 0x80, 0x35, 0xd3,
	0x2c, 0x2a, 0x99, 0xd8, 0x3f, 0xe2, 0x91, 0x77, 0x36, 0x89, 0xf9, 0x6f, 0xc0, 0x7a, 0xcc, 0x2e,
	0x06, 0x7c, 0xbd, 0x00, 0x99, 0x66, 0x84, 0x07, 0xb4, 0xe9, 0x3d, 0xf2, 0x2b, 0xa9, 0xae, 0xb8,
	0x39, 0xfa, 0x4a, 0x68, 0xa6, 0x95, 0x36, 0xb1, 0x75, 0x83, 0x9e, 0x5c, 0x00, 0xd8, 0x33, 0xb5,
	0x9d, 0x9c, 0x34, 0xf7, 0x45, 0x65, 0x65, 0xc6, 0xe4, 0x99, 0xe6, 0x20, 0x8c, 0x3a, 0xd1, 0x38,
	0x6c, 0x9f, 0xf5, 0x3b, 0xe7, 0x9b, 0x59, 0xf2, 0x57, 0x96, 0x2c, 0x7b, 0xcc, 0xf4, 0x96, 0x58,
	0xa8, 0x43, 0xb7, 0x13, 0xe1, 0xf3, 0x60, 0xc4, 0x6a, 0x3f, 0xc7, 0x22, 0x83, 0x34, 0x91, 0xe8,
	0x35, 0x58, 0x1d, 0xfb, 0x5e, 0xd4, 0x0e, 0xce, 0xda, 0x03, 0xdc, 0x09, 0xc7, 0x23, 0x4c, 0xe9,
	0x6f, 0x2e, 0x31, 0xa4, 0x15, 0xfa, 0xd7, 0x87, 0xb3, 0xf7, 0xd3, 0x3f, 0xd0, 0x0b, 0xa8, 0x5e,
	0x74, 0xc2, 0x76, 0x8f, 0x4c, 0xf6, 0x8a, 0x94, 0x3b, 0x75, 0xd8, 0xcc, 0x13, 0xe7, 0xbc, 0x5b,
	0x21, 0xf6, 0x7d, 0x6e, 0x3e, 0x21, 0x56, 0xda, 0x56, 0xd2, 0x8b, 0xcd, 0xaf, 0xc0, 0xdb, 0x4a,
	0xd8, 0x58, 0x5b, 0x91, 0xb6, 0x91, 0x2e, 0x67, 0x9d, 0x6e, 0x14, 0x8c, 0x36, 0x81, 0x38, 0x59,
	0x6e, 0x59, 0x58, 0xdf, 0x32, 0x23, 0x2d, 0xca, 0x7c, 0x5d, 0x50, 0x8e, 0xcf, 0xc8, 0x4a, 0xcc,
	0xe8, 0x86, 0xa5, 0x62, 0xd8, 0x19, 0x11, 0xfe, 0x72, 0xa9, 0x58, 0x71, 0xf3, 0xdc, 0xc0, 0x07,
	0xdc, 0x39, 0xb1, 0x8e, 0x0f, 0xb9, 0xbd, 0x51, 0xc7, 0xef, 0x5e, 0x50, 0xec, 0x53, 0xf6, 0x34,
	0xa5, 0x93, 0xe7, 0x86, 0x9b, 0x3f, 0x2e, 0x8b, 0xb7, 0x78, 0x73, 0xbc, 0x4c, 0x22, 0x5e, 0x1b,
	0xf2, 0xb2, 0x03, 0xd2, 0x2a, 0x3f, 0x6b, 0x54, 0x7e, 0x5a, 0xd4, 0xdb, 0xba, 0xec, 0x9f, 0x16,
	0x00, 0x9f, 0x11, 0x2b, 0xd7, 0x99, 0xb3, 0xd2, 0x6a, 0x79, 0xc1, 0xa8, 0x65, 0xa2, 0x7a, 0x9f,
	0xc6, 0x1d, 0x3f, 0xf2, 0xa2, 0x09, 0x0b, 0x61, 0xb9, 0xea, 0x9d, 0xad, 0x91, 0x17, 0xb8, 0x7f,
	0xd6, 0xa6, 0x7a, 0x11, 0x51, 0x12, 0x72, 0x8d, 0xa4, 0xd6, 0x03, 0x61, 0x74, 0x0e, 0xa1, 0xc2,
	0x69, 0xa8, 0x2f, 0x3e, 0x93, 0x4a, 0xac, 0x1c, 0x16, 0xe2, 0xe5, 0xe0, 0x7c, 0x5b, 0x22, 0xfb,
	0x15, 0xc6, 0xe0, 0x4b, 0x2c, 0x66, 0xbf, 0x83, 0x2c, 0x9d, 0x6a, 0x48, 0x02, 0xd1, 0xe5, 0xfa,
	0xb9, 0x31, 0xca, 0x08, 0x53, 0x13, 0xbf, 0x34, 0x9b, 0x2e, 0x1f, 0x84, 0x7e, 0x0f, 0x92, 0x19,
	0x5d, 0xf1, 0x17, 0x19, 0xc4, 0xcb, 0xdb, 0x21, 0x64, 0x26, 0x5c, 0x6d, 0x34, 0xda, 0x07, 0x91,
	0x04, 0x82, 0x94, 0x61, 0x48, 0x2f, 0x6e, 0x47, 0xe2, 0x99, 0x75, 0xd5, 0x48, 0xf4, 0x0e, 0x0a,
	0xb2, 0x6e, 0x42, 0x52, 0xe5, 0x73, 0x12, 0x52, 0x6b, 0xf1, 0x74, 0x30, 0x3a, 0x84, 0xe2, 0xa9,
	0x2a, 0x9f, 0x90, 0xac, 0x34, 0x14, 0xeb, 0xd5, 0xbc, 0x94, 0x58, 0x96, 0x74, 0x00, 0xf4, 0x17,
	0xa8, 0x9e, 0xea, 0x75, 0x40, 0x33, 0xb6, 0xc4, 0x40, 0x7f, 0x3e, 0x2f, 0xa8, 0xca, 0x5b, 0x02,
	0x89, 0x2e, 0x63, 0x41, 0xbf, 0xd7, 0x56, 0xa5, 0x43, 0x77, 0x43, 0x79, 0xa6, 0x20, 0x15, 0x62,
	0x57, 0x03, 0xc9, 0xa6, 0x68, 0x0b, 0x4a, 0xd4, 0x93, 0xd5, 0x3b, 0xf5, 0x2a, 0x70, 0x9d, 0x21,
	0x36, 0xc6, 0x99, 0x78, 0x3c, 0x03, 0x3a, 0xa6, 0x2d, 0x6a, 0x94, 0xfa, 0x00, 0xf3, 0xa1, 0xe3,
	0x44, 0xc2, 0x89, 0xd7, 0x4f, 0x61, 0x55, 0xf3, 0x52, 0x70, 0x45, 0xe6, 0x5a, 0x55, 0xae, 0x31,
	0xd0, 0x01, 0x1e, 0x9c, 0x8a, 0xcd, 0x5a, 0x49, 0x81, 0xbe, 0x67, 0x46, 0xea, 0xf5, 0x1a, 0x36,
	0x34, 0x50, 0x63, 0x36, 0x65, 0xe6, 0xbe, 0xa6, 0x80, 0xb5, 0x39, 0xd9, 0x01, 0x14, 0xb5, 0xea,
	0x24, 0x9d, 0x99, 0xa1, 0x7c, 0x44, 0x27, 0xac, 0x18, 0xe9, 0x65, 0x7c, 0xd8, 0xdf, 0xe8, 0x0d,
	0xe4, 0xc8, 0x7a, 0x4c, 0x1b, 0x97, 0x76, 0x59, 0x65, 0xe7, 0xc9, 0x8c, 0xef, 0xb0, 0xcb, 0x1c,
	0x5d, 0x31, 0xc0, 0xfe, 0x07, 0x2c, 0xc7, 0x6a, 0x19, 0xfd, 0x02, 0xf2, 0x92, 0xaf, 0x08, 0xbc,
	0x6e, 0xb6, 0xa0, 0xe4, 0xab, 0xdc, 0xee, 0x43, 0xe0, 0x1a, 0xca, 0x46, 0x69, 0x90, 0x0d, 0x53,
	0x8e, 0x67, 0x4d, 0x04, 0x5f, 0x35, 0xb0, 0xc4, 0x67, 0x13, 0x2e, 0x5f, 0x66, 0xe6, 0x6a, 0xf9,
	0x9e, 0xa2, 0x59, 0x77, 0x44, 0xa3, 0x49, 0x93, 0x1d, 0x27, 0xce, 0x30, 0x66, 0xd2, 0x54, 0x63,
	0x2a, 0x37, 0xfb, 0xdf, 0x16, 0xac, 0x24, 0x5a, 0xed, 0x3e, 0x1c, 0xc8, 0x11, 0x6c, 0xda, 0xa7,
	0x82, 0xc5, 0x46, 0x4a, 0xf6, 0x58, 0xe5, 0x68, 0xae, 0xf6, 0xff, 0x2d, 0x58, 0x4f, 0xed, 0xcf,
	0xfb, 0xb0, 0xa9, 0x43, 0xc5, 0x68, 0xee, 0x89, 0x60, 0xf4, 0x30, 0x85, 0x91, 0x2a, 0xa9, 0xd8,
	0x10, 0xe7, 0x15, 0xe4, 0x38, 0x2c, 0x02, 0xc8, 0xd5, 0xdd, 0xc6, 0xee, 0x71, 0xa3, 0xfa, 0x03,
	0xfa, 0x7c, 0x72, 0xb4, 0x4f, 0x9f, 0x2d, 0xfa, 0xbc, 0xdf, 0x38, 0x68, 0x90, 0xe7, 0x05, 0xe7,
	0xbb, 0x0a, 0x54, 0x24, 0x27, 0xb1, 0x17, 0x7d, 0x9d, 0x38, 0x61, 0xcc, 0x73, 0xba, 0x44, 0x1f,
	0xa0, 0x3a, 0x1e, 0xf6, 0x08, 0x0b, 0xb1, 0xbe, 0x78, 0x3d, 0x29, 0x2c, 0xdb, 0xa9, 0x19, 0xe0,
	0xd1, 0x6a, 0x27, 0x7c, 0x4c, 0xb3, 0xe7, 0x56, 0xc4, 0xf0, 0x26, 0x93, 0xdf, 0x10, 0xb5, 0x00,
	0x49, 0x40, 0x25, 0x99, 0x52, 0x68, 0xe6, 0x84, 0x94, 0x8c, 0xc4, 0x47, 0x24, 0xa0, 0x7f, 0x80,
	0x35, 0x09, 0xaa, 0x49, 0xad, 0x54, 0x9d, 0x39, 0x61, 0x25, 0xaf, 0xba, 0x52, 0xe6, 0x90, 0x08,
	0xb1, 0x10, 0x53, 0x2e, 0x3c, 0xcf, 0x66, 0x21, 0xd1, 0x33, 0xa5, 0x2e, 0xa5, 0xef, 0x0c, 0x29,
	0xcd, 0xcd, 0x10, 0x40, 0x0d, 0x20, 0x55, 0x48, 0xf7, 0x34, 0x21, 0x5d, 0x9a, 0xa1, 0xea, 0x1a,
	0x4e, 0x42, 0x46, 0xdf, 0xea, 0x32, 0x9a, 0x9f, 0x8f, 0x4c, 0x9a, 0x88, 0x1e, 0x98, 0x22, 0x5a,
	0x98, 0x21, 0xc8, 0x09, 0x3a, 0x49, 0x09, 0xfd, 0x53, 0x8a, 0x84, 0x02, 0x83, 0xac, 0xcd, 0x07,
	0x39, 0x5b, 0x40, 0xe9, 0x19, 0xd2, 0x90, 0x1c, 0xae, 0x65, 0x15, 0x62, 0x8f, 0x09, 0x28, 0xf5,
	0x54, 0x8a, 0xc7, 0x75, 0x0c, 0x88, 0x4d, 0xd3, 0x3a, 0xea, 0xa1, 0x09, 0x28, 0x17, 0x2f, 0x3a,
	0xce, 0x10, 0x50, 0xcd, 0x4b, 0xc1, 0x55, 0xb8, 0x80, 0x2a, 0xd7, 0x18, 0xa8, 0x26, 0xa0, 0xcb,
	0x0a, 0xd4, 0x10, 0x50, 0x0d, 0xd4, 0x98, 0x4d, 0x95, 0x0b, 0xa8, 0x02, 0xd6, 0x05, 0xd4, 0x87,
	0xbc, 0x2c, 0xc8, 0x79, 0xd5, 0xf3, 0xb7, 0x90, 0xa5, 0xdb, 0x79, 0x2c, 0x24, 0x64, 0xfb, 0xb6,
	0x2f, 0xd0, 0xa2, 0xce, 0x2e, 0x1f, 0x63, 0xff, 0x1d, 0x4a, 0x7a, 0xfd, 0x7e, 0x8e, 0x78, 0xde,
	0x2b, 0xfe, 0x15, 0xc0, 0xb4, 0x2a, 0xee, 0xa6, 0x9d, 0x5f, 0x62, 0xde, 0x4a, 0x3a, 0x75, 0xfd,
	0xb3, 0xe6, 0xd2, 0xbf, 0xfb, 0xc5, 0xff, 0x97, 0x05, 0x15, 0xb3, 0xc3, 0x62, 0xf2, 0x67, 0xcd,
	0x2d, 0x7f, 0xf7, 0x23, 0xf2, 0x3f, 0x0b, 0x50, 0xb2, 0x2f, 0x53, 0xd4, 0xcf, 0xba, 0xb3, 0xfa,
	0xdd, 0x8f, 0xd8, 0x1b, 0x28, 0xa8, 0x45, 0x1e, 0xad, 0x43, 0x8e, 0xed, 0x95, 0xe5, 0x31, 0x2d,
	0x4b, 0x77, 0xc9, 0xcc, 0xcc, 0x56, 0x00, 0x7e, 0x3c, 0xcb, 0xba, 0x59, 0xda, 0xfb, 0x3d, 0xe7,
	0x29, 0x14, 0x14, 0x1c, 0x2a, 0x40, 0xb6, 0xf1, 0xc7, 0x66, 0xeb, 0x98, 0xe8, 0x6e, 0x11, 0x96,
	0xdc, 0xc6, 0xfb, 0x0f, 0x1f, 0x1b, 0xfb, 0x55, 0xcb, 0x59, 0x03, 0x74, 0x4c, 0xe8, 0x86, 0x5c,
	0xee, 0xe5, 0x75, 0xcb, 0x3a, 0xac, 0x1a, 0x56, 0xce, 0x6e, 0xe7, 0x9b, 0x2c, 0x94, 0xf9, 0x6d,
	0x57, 0x8b, 0xdf, 0x67, 0xa3, 0x06, 0x00, 0xbd, 0x2a, 0xe3, 0x97, 0xb3, 0xc8, 0x36, 0xef, 0xc5,
	0xf4, 0x8b, 0x5d, 0xfb, 0x61, 0xec, 0x3f, 0xe3, 0x36, 0x77, 0x8f, 0xf7, 0x3b, 0x85, 0x42, 0x3f,
	0x32, 0x1d, 0xcd, 0xbb, 0x58, 0x3b, 0xf5, 0x1c, 0xc9, 0x6e, 0xfb, 0x0e, 0xa0, 0xa4, 0xdf, 0xdc,
	0xa1, 0x2d, 0x33, 0xcf, 0xc9, 0x4b, 0x3d, 0xdb, 0x8e, 0xd7, 0xb6, 0xb6, 0xe3, 0x68, 0x40, 0xb9,
	0x3e, 0xc2, 0x24, 0x73, 0xf2, 0x92, 0xf3, 0x91, 0xe1, 0x9c, 0xb8, 0x6e, 0xb5, 0x53, 0x6f, 0x16,
	0xd1, 0x11, 0x14, 0xb5, 0xbb, 0x35, 0xf4, 0xd8, 0x70, 0x4a, 0x5e, 0x04, 0xda, 0x5b, 0x37, 0x3b,
	0x08, 0x62, 0x75, 0xfe, 0x55, 0x1b, 0x3e, 0x3d, 0xf3, 0xdb, 0x37, 0x6f, 0xe4, 0x66, 0xce, 0xee,
	0x98, 0x5f, 0x72, 0x6b, 0xdf, 0x38, 0x46, 0x2d, 0x59, 0x13, 0x31, 0x6a, 0x29, 0xe5, 0x41, 0x76,
	0x47, 0x25, 0xfd, 0x52, 0x2f, 0xf6, 0x05, 0x52, 0xae, 0x01, 0xed, 0x27, 0x33, 0x3c, 0x04, 0xe8,
	0x47, 0x28, 0x1b, 0x37, 0x7f, 0xc8, 0x1c, 0x93, 0x76, 0x5b, 0x68, 0x3b, 0xb3, 0x5c, 0x38, 0xee,
	0xde, 0xaf, 0x61, 0x8b, 0x6c, 0x14, 0x6b, 0x83, 0xf1, 0x25, 0x1e, 0x75, 0x84, 0x7f, 0xad, 0xdb,
	0xf7, 0x88, 0x4f, 0xcd, 0xc7, 0xd1, 0x75, 0x30, 0xba, 0xdc, 0x43, 0x46, 0xb1, 0x1f, 0x51, 0xb4,
	0x23, 0xeb, 0x34, 0xc7, 0x60, 0x7f, 0xf9, 0x7d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x76, 0xfd, 0x6c,
	0xed, 0xdc, 0x19, 0x00, 0x00,
}
